{
  "swagger": "2.0",
  "info": {
    "description": "This is a simple API",
    "version": "1.0.0",
    "title": "Capstone Q4",
    "contact": {
      "email": "you@your-company.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "auth",
      "description": "User authentication"
    },
    {
      "name": "user",
      "description": "User routes"
    },
    {
      "name": "establishment",
      "description": "Establishment routes"
    },
    {
      "name": "client",
      "description": "Client routes"
    },
    {
      "name": "sale",
      "description": "Sale routes"
    },
    {
      "name": "product",
      "description": "Products routes"
    }
  ],
  "paths": {
    "/signin": {
      "post": {
        "tags": ["auth"],
        "summary": "user login",
        "operationId": "userLogin",
        "description": "Login route, returns user access token if credentials are correct.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "LoginUser",
            "description": "User credentials.",
            "schema": {
              "type": "object",
              "required": ["email", "password"],
              "properties": {
                "email": {
                  "type": "string",
                  "example": "jhondoe@mail.com"
                },
                "password": {
                  "type": "string",
                  "example": "kytr235fv"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "example": {
                "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImdhYnJpZWxAbWFpbC5jb20iLCJpc0FkbWluIjp0cnVlLCJpYXQiOjE2NTU4MzQ2NDcsImV4cCI6MTY1NTgzODI0N30.3-G1_l1eBfgqHaY_4GhkoZC4j8r0oFUzfPH8wYRC2y0"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "example": {
                "message": "Invalid credentials"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "example": {
                "message": ["password is a required field"]
              }
            }
          }
        }
      }
    },
    "/signup": {
      "post": {
        "tags": ["auth"],
        "summary": "create user",
        "operationId": "creaetUser",
        "description": "Route to create a new user",
        "produces": ["application/json"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CreateUser",
            "description": "Create new user",
            "schema": {
              "type": "object",
              "required": ["firstName", "lastName", "email", "password"],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Jhon"
                },
                "contact": {
                  "type": "string",
                  "example": "40028922"
                },
                "email": {
                  "type": "string",
                  "example": "jhondoe@mail.com"
                },
                "password": {
                  "type": "string",
                  "example": "kytr235fv"
                },
                "avatar": {
                  "type": "string",
                  "example": "https://taverna42.files.wordpress.com/2018/09/maxresdefault-1.jpg"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "example": {
                "id": "3c9f3615-f43d-460d-8048-07870ded844d",
                "name": "Jhon",
                "email": "jhondoe@mail.com",
                "contact": "40028922",
                "avatar": "https://taverna42.files.wordpress.com/2018/09/maxresdefault-1.jpg",
                "isAdmin": false,
                "isActive": true,
                "createdAt": "2022-06-21T18:04:41.258Z",
                "updatedAt": "2022-06-21T18:04:41.258Z"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "example": {
                "message": ["password is a required field"]
              }
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "type": "object",
              "example": {
                "message": "Email already exists"
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["user"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "get all users",
        "operationId": "GetUsers",
        "description": "This route is to get all users. Only admin users have access.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "example": {
                "error": "Missing authorization token."
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["user"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "get user by id",
        "operationId": "GetUserById",
        "description": "This route is to get the user by ID. Only admin users have access.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "example": {
                "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
                "firstName": "jhon",
                "lastName": "Doe",
                "email": "jhondoe@mail.com",
                "password": "kytr235fv",
                "isAdm": true,
                "createdAt": "2022-06-05 15:44:40.290",
                "updatedAt": "2022-06-05 15:44:40.290"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "example": {
                "error": "Missing authorization token."
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "example": {
                "error": "Missing admin permision."
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["user"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "update user by id",
        "operationId": "UpdateUserById",
        "description": "This route is to update user by ID. Only admin users have access.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "Update user",
            "description": "update one user",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Dio Brando"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "example": {
                "id": "3c9f3615-f43d-460d-8048-07870ded844d",
                "name": "Dio Brando",
                "email": "jhondoe@mail.com",
                "contact": "40028922",
                "avatar": "https://taverna42.files.wordpress.com/2018/09/maxresdefault-1.jpg",
                "isAdmin": false,
                "isActive": true,
                "createdAt": "2022-06-21T18:04:41.258Z",
                "updatedAt": "2022-06-21T18:04:41.258Z"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "example": {
                "error": "Missing authorization token."
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "example": {
                "error": "User not found"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "example": {
                "error": "Missing admin permision."
              }
            }
          }
        }
      }
    },
    "/users/isActive/{id}": {
      "get": {
        "tags": ["user"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "activate or deactivate a user",
        "operationId": "userIsActivate",
        "description": "This route is to activate or deactivate the user by ID. Only admin users have access.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "example": {
                "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
                "firstName": "jhon",
                "lastName": "Doe",
                "email": "jhondoe@mail.com",
                "password": "kytr235fv",
                "isAdm": true,
                "isActive": false,
                "createdAt": "2022-06-05 15:44:40.290",
                "updatedAt": "2022-06-05 15:44:40.290"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "example": {
                "error": "Missing authorization token."
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "example": {
                "error": "Missing admin permision."
              }
            }
          }
        }
      }
    },
    "/establishment": {
      "post": {
        "tags": ["establishment"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "post establishment",
        "operationId": "postEstablishment",
        "description": "Creates a new establishment in the application",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "creation",
            "description": "create an establishment",
            "schema": {
              "type": "object",
              "example": {
                "name": "Via c",
                "cnpj": "30.0155138.77/0008-24",
                "address": {
                  "street": "Rua c",
                  "number": 14011,
                  "zipCode": "25090-29",
                  "district": "Gova"
                },
                "contact": "02299999999",
                "urlLogo": "https://cdn.pixabay.com/photo/2017/03/16/21/18/logo-2150297_960_7230.png",
                "userId": "Insert the userID"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "object",
              "example": {
                "id": "9d3cb431-9031-425a-b4b1-dd6e0b71aeb6",
                "name": "Via c",
                "cnpj": "31.0155138.77/0008-24",
                "contact": "01299999999",
                "urlLogo": "https://cdn.pixabay.com/photo/2017/03/16/21/18/logo-2150297_960_7230.png",
                "address": {
                  "district": "Gova",
                  "zipCode": "25090-29",
                  "number": 14711,
                  "street": "Rua c"
                },
                "user": {
                  "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
                  "name": "mercadinho",
                  "email": "jhondoe@gmail.com"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "type": "array",
              "example": [
                {
                  "error": "Missing authorization token."
                },
                {
                  "message": [
                    "name is a required field",
                    "cnpj is a required field",
                    "contact is a required field",
                    "urlLogo is a required field",
                    "address is a required field",
                    "userId is a required field"
                  ]
                }
              ]
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "type": "array",
              "example": [
                {
                  "error": "Address number 123 already registered"
                },
                {
                  "error": "Establishment with cnpj 11.0000.33/3333-12 already registered"
                },
                {
                  "error": "Establishment with contact 035999947334 already registered"
                },
                {
                  "error": "User not found"
                }
              ]
            }
          }
        }
      },
      "get": {
        "tags": ["establishment"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "get all establishments",
        "operationId": "getEstablishments",
        "description": "Returns all establishments",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "array",
              "example": [
                {
                  "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
                  "name": "mercadinho",
                  "cnpj": "11.0000.33/3333-11",
                  "contact": "035999947333",
                  "urlLogo": "https://www.google.com/image",
                  "address": {
                    "district": "centro",
                    "zipCode": "12345-678",
                    "number": 123,
                    "street": "rua"
                  },
                  "user": {
                    "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
                    "name": "mercadinho",
                    "email": "jhondoe@gmail.com"
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "example": {
                "error": "Missing authorization token."
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "example": {
                "error": "Missing admin permision."
              }
            }
          }
        }
      }
    },
    "/establishment/{id}": {
      "get": {
        "tags": ["establishment"],
        "summary": "get one establishment",
        "operationId": "getEstablishment",
        "description": "Returns the establishment by id",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "object",
              "example": {
                "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
                "name": "mercadinho",
                "cnpj": "11.0000.33/3333-11",
                "contact": "035999947333",
                "urlLogo": "https://www.google.com/image",
                "address": {
                  "district": "centro",
                  "zipCode": "12345-678",
                  "number": 123,
                  "street": "rua"
                },
                "user": {
                  "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
                  "name": "mercadinho",
                  "email": "jhondoe@gmail.com"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "example": {
                "message": ["Missing authorization token."]
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["establishment"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "patch establishment",
        "operationId": "patchEstablishment",
        "description": "Edit the values of an establishment",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "Update user",
            "description": "update one user",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Mercadão"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "array",
              "example": [
                {
                  "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
                  "name": "Mercadão",
                  "cnpj": "11.0000.33/3333-11",
                  "contact": "035999947333",
                  "urlLogo": "https://www.google.com/image",
                  "address": {
                    "district": "centro",
                    "zipCode": "12345-678",
                    "number": 123,
                    "street": "rua"
                  },
                  "user": {
                    "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
                    "name": "mercadinho",
                    "email": "jhondoe@gmail.com"
                  }
                }
              ]
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "type": "array",
              "example": [
                {
                  "error": "Missing authorization token."
                },
                {
                  "message": [
                    "name is a required field",
                    "cnpj is a required field",
                    "contact is a required field",
                    "urlLogo is a required field",
                    "address is a required field",
                    "userId is a required field"
                  ]
                },
                {
                  "error": "The id 123 is not valid"
                }
              ]
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "array",
              "example": [
                {
                  "error": "User not found"
                },
                {
                  "error": "Establishment with id 9cc26733-4de1-4a60-88af-082a7a8fb0d2 not found."
                }
              ]
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "type": "array",
              "example": [
                {
                  "error": "Address number 123 already registered"
                },
                {
                  "error": "Establishment with cnpj 11.0000.33/3333-12 already registered"
                },
                {
                  "error": "Establishment with contact 035999947334 already registered"
                }
              ]
            }
          }
        }
      }
    },

    "/clients": {
      "get": {
        "tags": ["client"],
        "summary": "get all clients",
        "operationId": "GetAllClients",
        "description": "This route is to get all users. Only admin users have access.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "example": {
                "message": "Missing authorization token."
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "example": {
                "message": "You are not allowed to access this information"
              }
            }
          }
        }
      }
    },
    "/establishments/:id/clients": {
      "get": {
        "tags": ["client"],
        "summary": "get all clients",
        "operationId": "GetAllEstablishmentIdClients",
        "description": "This route is to get all users. Only admin users have access.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "example": {
                "message": "Missing authorization token."
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "example": {
                "message": "You are not allowed to access this information"
              }
            }
          }
        }
      }
    },
    "/establishments/:id/clients/:id": {
      "get": {
        "tags": ["client"],
        "summary": "get all clients",
        "operationId": "GetAllEstablishmentIdClientsId",
        "description": "This route is to get all users. Only admin users have access.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "example": {
                "message": "Missing authorization token."
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "example": {
                "message": "You are not allowed to access this information"
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["client"],
        "summary": "get all clients",
        "operationId": "GetAllEstablishmentIdClientsIdc",
        "description": "This route is to get all users. Only admin users have access.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "example": {
                "message": "Missing authorization token."
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "example": {
                "message": "You are not allowed to access this information"
              }
            }
          }
        }
      }
    },
    "/sale": {
      "get": {
        "tags": ["sale"],
        "summary": "get all sale",
        "operationId": "getAllSale",
        "description": "This route is to get all users. Only admin users have access.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "example": {
                "message": "Missing authorization token."
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "example": {
                "message": "You are not allowed to access this information"
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": ["product"],
        "summary": "get all products",
        "operationId": "getAllProducts",
        "description": "This route is to get all users. Only admin users have access.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "example": {
                "message": "Missing authorization token."
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "example": {
                "message": "You are not allowed to access this information"
              }
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": ["firstName", "lastName", "email", "password"],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "3c9f3615-f43d-460d-8048-07870ded844d"
        },
        "name": {
          "type": "string",
          "example": "Jhon"
        },
        "email": {
          "type": "string",
          "format": "email",
          "example": "jhondoe@mail.com"
        },
        "contact": {
          "type": "string",
          "example": "40028922"
        },
        "password": {
          "type": "string",
          "example": "kytr235fv"
        },
        "avatar": {
          "type": "string",
          "example": "https://taverna42.files.wordpress.com/2018/09/maxresdefault-1.jpg"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "example": "2022-06-21T18:04:41.258Z"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "example": "2022-06-21T18:04:41.258Z"
        },
        "isActive": {
          "type": "boolean",
          "example": true
        },
        "isAdmin": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "Establishment": {
      "type": "object",
      "required": ["name", "address", "contact", "urlLogo", "userId"],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
        },
        "name": {
          "type": "string",
          "example": "Jhon"
        },
        "cpnj": {
          "type": "string",
          "example": "11.0000.33/3333-12"
        },
        "address": {
          "type": "object",
          "required": ["street", "number", "city", "zipCode", "district"],
          "example": {
            "street": "Rua dos Bobos",
            "number": 0,
            "city": "São Paulo",
            "zipCode": "01001000",
            "district": "Centro"
          }
        },
        "contact": {
          "type": "string",
          "example": "123456789012"
        },
        "urlLogo": {
          "type": "string",
          "example": "https://www.google.com/image"
        },
        "userId": {
          "type": "string",
          "format": "uuid",
          "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
        }
      }
    },
    "UserRelationship": {
      "type": "object",
      "required": ["firstName", "lastName", "email", "password"],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
        },
        "firstName": {
          "type": "string",
          "example": "Jhon"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "format": "email",
          "example": "jhondoe@mail.com"
        },
        "password": {
          "type": "string",
          "example": "kytr235fv"
        },
        "isAdm": {
          "type": "boolean",
          "example": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "example": "2022-06-05 15:44:40.290"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "example": "2022-06-05 15:44:40.290"
        },
        "courses": {
          "$ref": "#/definitions/Establishment"
        }
      }
    }
  },
  "host": "localhost",
  "basePath": ":3000/api",
  "schemes": ["http"]
}
